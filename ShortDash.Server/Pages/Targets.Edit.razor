@page "/targets/{DashboardActionTargetId}"
@page "/targets/new"
@attribute [Authorize(Policy = Policies.EditTargets)]

<div class="page">
    @if (IsLoading)
    {
        <PageLoadingComponent />
    }
    else
    {
        @if (string.IsNullOrWhiteSpace(DashboardActionTarget.DashboardActionTargetId))
        {
            <h3>New Target</h3>
        }
        else
        {
            <h3>@DashboardActionTarget.Name</h3>
        }

        <EditForm Model="DashboardActionTarget" OnValidSubmit="SaveChanges">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label for="DashboardName">Name</label>
                <InputText @bind-Value="DashboardActionTarget.Name" class="form-control" id="DashboardName" />
                <ValidationMessage For="() => DashboardActionTarget.Name" />
            </div>
            <div class="form-group disabled">
                <label for="ActionType">Target ID</label>
                @if (string.IsNullOrWhiteSpace(DashboardActionTarget.DashboardActionTargetId))
                {
                    <div class="alert alert-info"><span class="fas fa-info-circle"></span> A Target ID will be generated once this target is saved.</div>
                }
                else
                {
                    <input type="text" class="form-control" value="@DashboardActionTarget.DashboardActionTargetId" disabled />
                }
            </div>
            <button type="button" class="btn btn-outline-danger float-left" @onclick="ConfirmDelete">Delete</button>

            <div class="float-right">
                <button type="button" class="btn btn-secondary" @onclick=CancelChanges>Cancel</button>
                <button type="submit" class="btn btn-primary">Save</button>
            </div>
        </EditForm>
    }
</div>