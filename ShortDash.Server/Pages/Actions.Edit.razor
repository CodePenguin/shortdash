@page "/actions/{DashboardActionId:int}"
@page "/actions/{DashboardActionId:int}/{Operation}"
@page "/actions/new"
@attribute [Authorize(Policy = Policies.EditActions)]
@inherits PageBase

@using ShortDash.Server.Actions

<div class="page m-auto col-lg-6">
    @if (IsLoading)
    {
        <PageLoadingComponent />
    }
    else if (ActionEditContext == null)
    {
        <div class="page">
            <h3 class="alert alert-danger">This action does not seem to exist anymore.</h3>
        </div>
    }
    else
    {
        <EditForm EditContext="@ActionEditContext">
            <DataAnnotationsValidator />

            @if (!IsDataSignatureValid)
            {
                <div class="alert alert-danger">
                    <h3><span class="fas fa-exclamation-triangle"></span> Invalid data signature</h3>
                    The data signature for this action could not be verified which means it could have been modified outside of ShortDash and contain malicious content.
                    This action will not be allowed to execute until you verify all parameters and save the changes.
                </div>
            }

            <fieldset>
                <legend>
                    @Operation Action
                </legend>
                @if (DashboardActionId == 0)
                {
                    <div class="form-group disabled">
                        <label for="ActionType">Action Type</label>
                        <ActionTypeInputSelect @bind-Value="DashboardAction.ActionTypeName" OptionSelected="@ChangeActionTypeName" />
                    </div>
                }
                else if (!string.IsNullOrWhiteSpace(ActionAttribute?.Title))
                {
                    <div class="form-group disabled">
                        <label for="ActionType">Type</label>
                        <input type="text" class="form-control" value="@ActionAttribute.Title" disabled />
                    </div>
                }
                <div class="form-group disabled">
                    <label for="ActionTarget">Target</label>
                    <ActionTargetInputSelect @bind-Value="DashboardAction.DashboardActionTargetId" />
                </div>
                <fieldset>
                    <legend>Display Style</legend>
                    <div class="form-group">
                        <label for="ActionLabel">Label</label>
                        <InputText @bind-Value="@DashboardAction.Label" class="form-control" id="ActionLabel" placeholder="Enter text to display" />
                        <ValidationMessage For="() => DashboardAction.Label" />
                    </div>
                    <div class="form-group">
                        <label for="BackgroundColor">Background Color</label>
                        <InputColor @bind-Value="@DashboardAction.BackgroundColor" class="form-control" id="BackgroundColor" />
                        <ValidationMessage For="() => DashboardAction.BackgroundColor" />
                    </div>
                    <div class="form-group">
                        <label for="Icon">Icon</label>
                        <div class="input-group">
                            <InputText @bind-Value="DashboardAction.Icon" class="form-control" id="Icon" placeholder="Enter a relative URL path to an image file" />
                            <div class="input-group-append">
                                <button type="button" class="btn btn-secondary" @onclick="SelectIcon" @onclick:preventDefault><span class="fas fa-search"></span></button>
                            </div>
                        </div>
                        <small>An optional image to be displayed for this action.</small>
                        <ValidationMessage For="() => DashboardAction.Icon" />
                    </div>
                </fieldset>
                @if (IsToggle)
                {
                    <fieldset>
                        <legend>Toggle Display Style</legend>
                        <div class="form-group">
                            <label for="ActionLabel">Label</label>
                            <InputText @bind-Value="@DashboardAction.ToggleLabel" class="form-control" id="ActionLabel" placeholder="Enter text to display" />
                            <ValidationMessage For="() => DashboardAction.ToggleLabel" />
                        </div>
                        <div class="form-group">
                            <label for="BackgroundColor">Background Color</label>
                            <InputColor @bind-Value="@DashboardAction.ToggleBackgroundColor" class="form-control" id="ToggleBackgroundColor" />
                            <ValidationMessage For="() => DashboardAction.ToggleBackgroundColor" />
                        </div>
                        <div class="form-group">
                            <label for="Icon">Icon</label>
                            <div class="input-group">
                                <InputText @bind-Value="DashboardAction.ToggleIcon" class="form-control" id="ToggleIcon" placeholder="Enter a relative URL path to an image file" />
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-secondary" @onclick="SelectToggleIcon" @onclick:preventDefault><span class="fas fa-search"></span></button>
                                </div>
                            </div>
                            <small>An optional image to be displayed for this action.</small>
                            <ValidationMessage For="() => DashboardAction.ToggleIcon" />
                        </div>
                    </fieldset>
                }

                <div class="form-group">
                    <label for="DashboardActionIcon">Preview</label>
                    <div class="row text-center">
                        <div class="col py-3 px-3 flex-grow-0">
                            <div class="grid-cell">
                                <DashboardActionIcon DashboardAction="DashboardAction" />
                            </div>
                        </div>
                        @if (IsToggle)
                        {
                            <div class="col py-3 px-3 flex-grow-0">
                                <div class="grid-cell">
                                    <DashboardActionIcon DashboardAction="DashboardAction" ToggleState="true" />
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </fieldset>

            @if (ParametersEditContext != null)
            {
                <fieldset>
                    <legend>Parameters</legend>
                    <FormGenerator EditContext="@ParametersEditContext" FormElementType="typeof(ActionPropertyFormElement)"></FormGenerator>
                </fieldset>
            }

            @if (DashboardAction.ActionTypeName == typeof(DashGroupAction).FullName)
            {
                <fieldset>
                    <legend>Actions</legend>
                    <DashGroupActionInputGrid SubActions="SubActions" DashboardService="DashboardService" />
                </fieldset>
            }

            @if (DashboardActionId != 0)
            {
                <div class="float-left">
                    <button type="button" class="btn btn-outline-danger" @onclick="ConfirmDelete">Delete</button>
                    <button type="button" class="btn btn-outline-secondary" @onclick="CopyAction">Copy</button>
                </div>
            }

            <div class="float-right">
                <button type="button" class="btn btn-secondary" @onclick=CancelChanges>Cancel</button>
                <button type="button" class="btn btn-primary" @onclick="SaveChanges">Save</button>
            </div>
        </EditForm>
    }
</div>
