@using System.Drawing
@using System.Text.RegularExpressions
@inherits InputBase<Color>

<input type="color" @attributes="AdditionalAttributes" class="@CssClass" @bind="CurrentValueAsString" />

@code {
    private static Regex _regex = new Regex("^#([0-9a-f]{2}){3}$", RegexOptions.Compiled | RegexOptions.IgnoreCase);

    protected override string FormatValueAsString(Color value)
    {
        return value.ToHtmlString();
    }

    protected override bool TryParseValueFromString(string value, out Color result, out string validationErrorMessage)
    {
        if (value == null || string.IsNullOrWhiteSpace(value))
        {
            result = Color.Black;
            validationErrorMessage = "";
            return true;
        }
        if (!ColorExtensions.TryParse(value, out var color))
        {
            validationErrorMessage = "Not a valid color code";
            result = Color.Red;
            return false;
        }
        result = color;
        validationErrorMessage = "";
        return true;
    }
}
